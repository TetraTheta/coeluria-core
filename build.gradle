plugins {
  id 'java' // Without this, there is no 'build' task available!
  id 'dev.architectury.loom' version '1.10-SNAPSHOT' apply false
  id 'architectury-plugin' version '3.4-SNAPSHOT'
  id 'com.gradleup.shadow' version '8.3.6' apply false
}

architectury {
  minecraft = rootProject.minecraft_version
}

allprojects {
  group = rootProject.maven_group
  version = rootProject.mod_version + '+' + rootProject.minecraft_version
}

// Delete unnecessary copied JAR files
tasks.named('build').configure {
  dependsOn subprojects.collect { it.tasks.named('build') }

  doLast {
    def libsDir = rootProject.layout.buildDirectory.dir('libs').get().asFile
    delete new File(libsDir, "${rootProject.archives_name}-${project.version}.jar").absolutePath
    delete new File(libsDir, "${rootProject.archives_name}-common-${project.version}.jar").absolutePath
  }
}

// Delete 'build' directory at the root when running 'clean' task
tasks.named('clean').configure {
  dependsOn subprojects.collect { it.tasks.named('clean') }

  doLast { delete rootProject.layout.buildDirectory }
}

subprojects {
  apply plugin: 'dev.architectury.loom'
  apply plugin: 'architectury-plugin'
  apply plugin: 'maven-publish'

  base {
    // Set up a suffixed format for the mod jar names, e.g. `example-fabric`.
    archivesName = "$rootProject.archives_name-$project.name"
  }

  repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.
  }

  loom {
    silentMojangMappingsLicense()
  }

  dependencies {
    minecraft "net.minecraft:minecraft:$rootProject.minecraft_version"
    mappings loom.officialMojangMappings()
  }

  java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
  }

  tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
  }

  // Configure Maven publishing.
  publishing {
    publications {
      mavenJava(MavenPublication) {
        artifactId = base.archivesName.get()
        from components.java
      }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
      // Add repositories to publish to here.
      // Notice: This block does NOT have the same function as the block in the top level.
      // The repositories here will be used for publishing your artifact, not for
      // retrieving dependencies.
    }
  }

  // Copy build output to root project build directory
  tasks.register('copyToRoot', Copy) {
    description = "Copy ${project.name} output into ${rootProject.layout.buildDirectory.dir('libs')}"
    dependsOn tasks.named('build')
    from(layout.buildDirectory.dir('libs')) {
      include "${rootProject.archives_name}-${project.name}-${project.version}.jar"
    }
    into(rootProject.layout.buildDirectory.dir('libs'))
  }
  tasks.named('build') { finalizedBy tasks.named('copyToRoot') }
}
